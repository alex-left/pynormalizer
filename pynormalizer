#!/usr/bin/python3

import os, argparse, sys


parser = argparse.ArgumentParser(description="Replace a space or another char in \
directories and files by underscore or another char")
parser.add_argument("target", type=str, nargs='+',
                    help="file or directory to rename")
parser.add_argument("-v", "--verbose", action="store_true",
                    help="print every file or directories renamed")
parser.add_argument("-r", "--recursive", action="store_true",
                    help="rename files recursively")
parser.add_argument("-o", "--origin", type=str, action="store", default=" ",
                    help="The origin char to find. A space by default")
parser.add_argument("-d", "--dest", type=str, action="store", default="_",
                    help="The dest char to susbtitute. An underscore by default")

args = parser.parse_args()
verbose = args.verbose
recursive = args.recursive
origin = args.origin
dest = args.dest
targets = [ os.path.abspath(n) for n in args.target ]


def recursiver(target):
    if os.path.isdir(target):
        os.chdir(target)
        for root, dirs, files in os.walk(target, topdown=False):
            os.chdir(root)
            for file in files:
                renamer(file)
            for dir in dirs:
                renamer(dir)
    else:
        print("ERROR, you must define a valid directory with 'recursive' option")
        exit(1)


def renamer(filename):
    old = filename
    try:
        os.rename(filename, filename.replace(origin, dest))
        if verbose and not os.path.exists(old):
            print("%s renamed" % old)
    except Exception as e:
        print("ERROR: ", e)
        exit(1)


if __name__ == "__main__":
    for target in targets:
        if not os.path.exists(target):
            print("ERROR, %s argument must be a valid file or directory" % target)
            sys.exit(1)
        else:
            renamer(target)
        if recursive:
            recursiver(target)
