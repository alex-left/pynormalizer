#!/usr/bin/python3
'''
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
'''

import os
import argparse
import sys
import re
from pathlib import Path

parser = argparse.ArgumentParser(description="Replace a space or another char in \
directories and files by underscore or another char")
parser.add_argument("target", type=str, nargs='+',
                    help="file or directory to rename")
parser.add_argument("-v", "--verbose", action="store_true",
                    help="print every file or directories renamed")
parser.add_argument("-r", "--recursive", action="store_true",
                    help="rename files recursively")
parser.add_argument("-o", "--origin", type=str, action="store",
                    help='''The origin char to substitute. Common undesiderable chars by default, 
                    i.e all characters other than numbers, letters, hyphens, dots and commas''')
parser.add_argument("-d", "--dest", type=str, action="store", default="_",
                    help="The dest char to susbtitute. An underscore by default")

args = parser.parse_args()
verbose = args.verbose
recursive = args.recursive
origin = args.origin
dest = args.dest
targets = args.target
default_regex = r'^(-+)?[^\d\w\-._,]'


def recursiver(path):
    if path.is_dir():
        os.chdir(str(path.resolve()))
        for root, dirs, files in os.walk(os.getcwd(), topdown=False):
            os.chdir(root)
            for file in files:
                renamer(Path(file))
            for dir in dirs:
                renamer(Path(dir))
        renamer(path)
    else:
        print("ERROR, you must define a valid directory with 'recursive' option")
        raise SystemExit(1)



def renamer(path):
    try:
        if not origin:
            path.rename(str(path.with_name(re.sub(default_regex, dest, path.name, re.UNICODE))))
        else:
            path.rename(str(path.with_name(path.name.replace(origin, dest))))
        if verbose and not path.exists():
            print("%s renamed" % str(path.absolute()))
    except Exception as e:
        print("ERROR: ", e)
        exit(1)


if __name__ == "__main__":
    if sys.version_info < (3, 4):
        sys.exit('this program requires Python 3.4+')
    for target in targets:
        path = Path(target)
        if not path.exists():
            print("ERROR, %s argument must be a valid file or directory" % str(path.absolute()))
            raise SystemExit(1)
        else:
            if recursive:
                recursiver(path)
            else:
                renamer(path)
